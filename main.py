import os
import json
import telebot
import requests
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN", "7840803477:AAFql7Ppyk9bQ8RQI7uoSLnEFvahRpjQkV0")
NP_API_KEY = os.getenv("NP_API_KEY", "cb589626abe2488ac0bd2c750419a496")
GROUP_FROM = -1002343109699  # –ì—Ä—É–ø–ø–∞, –æ—Ç–∫—É–¥–∞ –ø–æ–ª—É—á–∞—Ç—å –∑–∞—è–≤–∫–∏
GROUP_TTN = -1002684087753  # –ì—Ä—É–ø–ø–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¢–¢–ù

# –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
SENDER_NAME = "–ö—É—Ä–æ—á–∫–∞ –î–∞–≤–∏–¥ –Ü–≥–æ—Ä–æ–≤–∏—á"
SENDER_PHONE = "+380931168786"
SENDER_CITY = "–º. –§–∞—Å—Ç—ñ–≤"
SENDER_ADDRESS = "–≤—É–ª –Ø—Ä–æ—Å–ª–∞–≤–∞ –º—É–¥—Ä–æ–≥–æ 51"
SENDER_WAREHOUSE = "1"

bot = telebot.TeleBot(BOT_TOKEN)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö
created_ttns = []
sent_ttns = []

def create_np_waybill(data):
    url = "https://api.novaposhta.ua/v2.0/json/"
    payload = {
        "apiKey": NP_API_KEY,
        "modelName": "InternetDocument",
        "calledMethod": "save",
        "methodProperties": {
            "Sender": SENDER_NAME,
            "SenderPhone": SENDER_PHONE,
            "CitySender": SENDER_CITY,
            "SenderAddress": SENDER_ADDRESS,
            "SenderWarehouse": SENDER_WAREHOUSE,
            "Recipient": data["name"],
            "RecipientPhone": data["phone"],
            "CityRecipient": data["city"],
            "RecipientWarehouse": data["warehouse"],
            "CargoType": "Parcel",
            "Weight": "0.5",
            "ServiceType": "WarehouseWarehouse",
            "PaymentMethod": "Cash",
            "PayerType": "Recipient",
            "Cost": data["amount"],
            "Description": "–°–≤—è—Ç–∫–æ–≤–∞ —Å–∫–∞—Ä–±–Ω–∏—á–∫–∞",
            "AfterpaymentOnGoodsCost": data["transfer"]
        }
    }
    response = requests.post(url, json=payload)
    return response.json()

@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ù–∞–∫–ª–∞–¥–Ω—ã–µ, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ", callback_data="pending"))
    markup.add(InlineKeyboardButton("–ù–∞–∫–ª–∞–¥–Ω—ã–µ –≤ –ø—É—Ç–∏", callback_data="in_transit"))
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.chat.id == GROUP_FROM)
def handle_order(message):
    try:
        lines = message.text.split('\n')
        order_data = {
            "name": lines[0].replace("–§–ò–û: ", ""),
            "phone": lines[1].replace("–¢–µ–ª–µ—Ñ–æ–Ω: ", ""),
            "city": lines[2].replace("–úi—Å—Ç–æ: ", ""),
            "warehouse": lines[3].replace("–ù–æ–º–µ—Ä –≤i–¥–¥i–ª–µ–Ω–Ω—è: ", ""),
            "amount": lines[4].replace("–û—Üi–Ω–æ—á–Ω–∞ –≤–∞—Ä—Çi—Å—Ç—å: ", ""),
            "transfer": lines[5].replace("–ì—Ä–æ—à–æ–≤–∏–π –ø–µ—Ä–µ–∫–∞–∑: ", "")
        }
        response = create_np_waybill(order_data)
        if response.get("success"):
            ttn = response["data"][0]["IntDocNumber"]
            created_ttns.append({"ttn": ttn, "amount": order_data["amount"]})
            bot.send_message(GROUP_TTN, f"üöõ –°–æ–∑–¥–∞–Ω–∞ –¢–¢–ù: {ttn}\n–°—É–º–º–∞: {order_data['amount']} –≥—Ä–Ω")
        else:
            bot.send_message(GROUP_TTN, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¢–¢–ù")
    except Exception as e:
        bot.send_message(GROUP_TTN, f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {str(e)}")

@bot.callback_query_handler(func=lambda call: call.data == "pending")
def show_pending_ttns(call):
    if not created_ttns:
        bot.send_message(call.message.chat.id, "üì¶ –ù–µ—Ç –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö")
    else:
        total = sum(float(x["amount"]) for x in created_ttns)
        ttn_list = "\n".join([f"{x['ttn']} ‚Äì {x['amount']} –≥—Ä–Ω" for x in created_ttns])
        bot.send_message(call.message.chat.id, f"üìå –ù–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¢–¢–ù:\n{ttn_list}\n\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total} –≥—Ä–Ω")

@bot.callback_query_handler(func=lambda call: call.data == "in_transit")
def show_sent_ttns(call):
    if not sent_ttns:
        bot.send_message(call.message.chat.id, "üöö –ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö")
    else:
        total = sum(float(x["amount"]) for x in sent_ttns)
        ttn_list = "\n".join([f"{x['ttn']} ‚Äì {x['amount']} –≥—Ä–Ω" for x in sent_ttns])
        bot.send_message(call.message.chat.id, f"üöÄ –í –ø—É—Ç–∏:\n{ttn_list}\n\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total} –≥—Ä–Ω")

bot.polling(none_stop=True)
